<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>{{title}}</title>
  
  <!-- Fonts and icons -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Noto+Sans:300,400,500,600,700,800|PT+Mono:300,400,500,600,700" rel="stylesheet" />
  
  <!-- CSS Files -->
  <link id="pagestyle" href="/css/corporate-ui-dashboard.css" rel="stylesheet" />
  
  {{> style}}
</head>

<body class="bg-gray-100">
  {{> sidebar}}
  <!-- Main Content -->
  <div class="main-content bg-gray-100">
    <nav class="navbar navbar-expand-lg mb-4 p-3">
      <div class="container-fluid px-0">
        <div class="d-flex align-items-center">
          <button class="menu-toggle" id="menuToggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
          <h4 class="font-weight-bold mb-0">Products</h4>
        </div>
        <div class="ms-auto">
          <span class="font-weight-bold d-none d-sm-inline">Welcome, {{user.username}}</span>
          <span class="d-inline d-sm-none">{{user.username}}</span>
        </div>
      </div>
    </nav>
    
    <!-- Products Content -->
    <div class="container-fluid px-0">
      <div class="row">
        <div class="col-12 mb-4">
          <div class="card border shadow-xs">
            <div class="card-header border-bottom pb-0">
              <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center">
                <div class="mb-3 mb-md-0">
                  <h6 class="font-weight-semibold text-lg mb-0">Product Catalog</h6>
                  <p class="text-sm mb-0">View all available products</p>
                </div>
                <div class="d-flex">
                  <button type="button" class="btn btn-sm btn-white me-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-funnel" viewBox="0 0 16 16">
                      <path d="M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5v-2z"/>
                    </svg>
                    Filter
                  </button>
                  <button type="button" class="btn btn-sm btn-dark">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                      <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                    </svg>
                    Add Product
                  </button>
                </div>
              </div>
            </div>
            <div class="card-body px-0 py-0">
              <div class="table-responsive p-0">
                <table class="table align-items-center justify-content-center mb-0">
                  <thead class="bg-gray-100">
                    <tr>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-3">ID</th>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2">Name</th>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2">Price</th>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2">Category</th>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2 text-center">Status</th>
                      <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2">Actions</th>
                    </tr>
                  </thead>
                  <tbody id="productsTableBody">
                    <!-- Products will be loaded here -->
                  </tbody>
                </table>
              </div>
              <div id="loadingIndicator" class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Loading products...</p>
              </div>
              <div id="noProductsMessage" class="text-center py-5 d-none">
                <p>No products found.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Core JS Files -->
  <script src="/js/core/popper.min.js"></script>
  <script src="/js/core/bootstrap.min.js"></script>

  <script>
    // Function to fetch products
    async function fetchProducts() {
      try {
        const response = await fetch('/products');
        if (!response.ok) {
          throw new Error('Failed to fetch products');
        }
        const products = await response.json();
        return products;
      } catch (error) {
        console.error('Error fetching products:', error);
        return [];
      }
    }

    // Function to render products
    function renderProducts(products) {
      const tableBody = document.getElementById('productsTableBody');
      const loadingIndicator = document.getElementById('loadingIndicator');
      const noProductsMessage = document.getElementById('noProductsMessage');
      
      // Hide loading indicator
      loadingIndicator.classList.add('d-none');
      
      // Check if products exist
      if (!products.length) {
        noProductsMessage.classList.remove('d-none');
        return;
      }
      
      // Clear existing rows
      tableBody.innerHTML = '';
      
      // Add products to table
      products.forEach(product => {
        const row = document.createElement('tr');
        
        // Determine status class
        let statusClass = 'bg-success';
        let statusText = 'In Stock';
        
        if (product.stock <= 0) {
          statusClass = 'bg-danger';
          statusText = 'Out of Stock';
        } else if (product.stock < 10) {
          statusClass = 'bg-warning';
          statusText = 'Low Stock';
        }
        
        row.innerHTML = `
          <td>
            <p class="text-sm font-weight-normal mb-0 px-3">${product.id}</p>
          </td>
          <td>
            <div class="d-flex px-2">
              <div class="my-auto">
                <h6 class="mb-0 text-sm">${product.name}</h6>
              </div>
            </div>
          </td>
          <td>
            <p class="text-sm font-weight-normal mb-0">$${product.price ? product.price.toFixed(2) : '0.00'}</p>
          </td>
          <td>
            <p class="text-sm font-weight-normal mb-0">${product.category || 'Uncategorized'}</p>
          </td>
          <td class="align-middle text-center">
            <div class="d-flex align-items-center justify-content-center">
              <span class="badge ${statusClass}">${statusText}</span>
            </div>
          </td>
          <td>
            <div class="d-flex">
              <button class="btn btn-sm btn-link text-primary px-3 mb-0" onclick="viewProduct(${product.id})">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                  <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
                  <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
                </svg>
              </button>
              <button class="btn btn-sm btn-link text-secondary px-3 mb-0" onclick="editProduct(${product.id})">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                  <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"/>
                </svg>
              </button>
              <button class="btn btn-sm btn-link text-danger px-3 mb-0" onclick="deleteProduct(${product.id})">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                  <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                </svg>
              </button>
            </div>
          </td>
        `;
        
        tableBody.appendChild(row);
      });
    }

    // Placeholder functions for CRUD operations
    function viewProduct(id) {
      console.log('View product', id);
      // Implement view functionality
    }

    function editProduct(id) {
      console.log('Edit product', id);
      // Implement edit functionality
    }

    function deleteProduct(id) {
      console.log('Delete product', id);
      // Implement delete functionality
    }

    // Load products when the page loads
    document.addEventListener('DOMContentLoaded', async () => {
      const products = await fetchProducts();
      renderProducts(products);
    });
  </script>

  {{> script}}
</body>
</html>