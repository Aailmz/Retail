<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Edit Promotion</title>
  
  <!-- Fonts and icons -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
  
  {{> style}}

  <!-- CSS Files -->
  <link id="pagestyle" href="/css/corporate-ui-dashboard.css" rel="stylesheet" />
</head>

<body class="bg-gray-100">
  {{> sidebar}}

  <div class="main-content bg-gray-100">
    <nav class="navbar navbar-expand-lg mb-4 p-3">
      <div class="container-fluid px-0">
        <div class="d-flex align-items-center">
          <button class="menu-toggle" id="menuToggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
          <h4 class="font-weight-bold mb-0">Promotions</h4>
        </div>
        <div class="ms-auto">
          <span class="font-weight-bold d-none d-sm-inline">Welcome, {{user.username}}</span>
          <span class="d-inline d-sm-none">{{user.username}}</span>
        </div>
      </div>
    </nav>

    {{> notification}}

  <div class="container-fluid px-4 mt-4">
    <div class="row">
      <div class="col-12">
        <div class="card border shadow-xs">
          <div class="card-header border-bottom pb-0">
            <div class="d-flex justify-content-between align-items-center">
              <h5 class="mb-0">Edit Promotion</h5>
              <a href="/promotions" class="btn btn-sm btn-secondary">Back to List</a>
            </div>
          </div>
          <div class="card-body">
            <form action="/promotions/{{promotion.id}}/update" method="POST" id="promotionForm">
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="name" class="form-label">Promotion Name</label>
                    <input type="text" class="form-control" id="name" name="name" value="{{promotion.name}}" required>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="type" class="form-label">Promotion Type</label>
                    <select class="form-control" id="type" name="type" required disabled>
                      <option value="">Select Type</option>
                      <option value="buy_x_get_y" {{#if (eq promotion.type "buy_x_get_y")}}selected{{/if}}>Buy X Get Y</option>
                      <option value="discount_percentage" {{#if (eq promotion.type "discount_percentage")}}selected{{/if}}>Discount Percentage</option>
                      <option value="bundle" {{#if (eq promotion.type "bundle")}}selected{{/if}}>Bundle Deal</option>
                    </select>
                    <input type="hidden" name="type" value="{{promotion.type}}">
                  </div>
                </div>
              </div>
              
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea class="form-control" id="description" name="description" rows="3">{{promotion.description}}</textarea>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-control" id="status" name="status" required>
                      <option value="">Select Status</option>
                      <option value="active" {{#if (eq promotion.status "active")}}selected{{/if}}>Active</option>
                      <option value="inactive" {{#if (eq promotion.status "inactive")}}selected{{/if}}>Inactive</option>
                      <option value="draft" {{#if (eq promotion.status "draft")}}selected{{/if}}>Draft</option>
                    </select>
                  </div>
                </div>
              </div>
              
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="datetime-local" class="form-control" id="startDate" name="startDate" value="{{formatDateTimeLocal promotion.startDate}}" required>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="datetime-local" class="form-control" id="endDate" name="endDate" value="{{formatDateTimeLocal promotion.endDate}}" required>
                  </div>
                </div>
              </div>
              
              <!-- Hidden fields to preserve configuration data -->
              <input type="hidden" id="rulesJson" name="rules" value='{{jsonStringify promotion.rules}}'>
              <input type="hidden" id="configurationJson" name="configuration" value='{{jsonStringify promotion.configuration}}'>
              
              <div class="d-flex justify-content-end">
                <a href="/promotions" class="btn btn-light me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">Update Promotion</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Core JS Files -->
  {{> script}}
  <script>
    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', function() {
      const startDateInput = document.getElementById('startDate');
      const endDateInput = document.getElementById('endDate');
      
      // Format current date and time to the format expected by datetime-local input
      function formatDateTimeForInput(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const hours = String(date.getHours()).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');
        
        return `${year}-${month}-${day}T${hours}:${minutes}`;
      }
      
      // Set minimum date for start date to now
      const now = new Date();
      const formattedNow = formatDateTimeForInput(now);
      
      // Event listener for start date change
      startDateInput.addEventListener('change', function() {
        const selectedStartDate = new Date(this.value);
        
        // Set minimum value for end date to be the selected start date
        endDateInput.setAttribute('min', this.value);
        
        // Clear the end date if it's now less than the start date
        const currentEndDate = new Date(endDateInput.value);
        if (endDateInput.value && currentEndDate <= selectedStartDate) {
          endDateInput.value = '';
        }
      });
      
      // Form submission handler
      document.getElementById('promotionForm').addEventListener('submit', function(event) {
        // Validate dates
        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);
        
        if (endDate <= startDate) {
          event.preventDefault();
          alert('End date must be after start date');
          return;
        }
      });
    });
  </script>
</body>
</html>